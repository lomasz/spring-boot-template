plugins {
    id "java"
    id "org.springframework.boot" version "3.1.5"
    id "io.spring.dependency-management" version "1.1.3"
    id "jacoco"
    id "org.owasp.dependencycheck" version "8.4.3"
    id "com.diffplug.spotless" version "6.22.0"
    id "com.coditory.integration-test" version "1.4.5"
}

ext {
    jacocoVersion = "0.8.8"
    junitVersion = "5.9.0"
    lombokVersion = "1.18.24"
    mapStructVersion = "1.5.2.Final"
    mockitoVersion = "4.8.0"
    swaggerVersion = "2.2.0"
    h2Version = "2.2.224"
}

group = "com.github.lomasz.spring.boot.template"
version = "0.0.1-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
    maven { url "https://oss.jfrog.org/artifactory/oss-snapshot-local/" }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter"

    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.yaml", module: "snakeyaml" // addressing CVE-2022-1471; fixed in Spring Boot 3.2.0
    }

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-rest"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$swaggerVersion"

    implementation "org.yaml:snakeyaml:2.0" // addressing CVE-2022-1471; fixed in Spring Boot 3.2.0

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    implementation "org.mapstruct:mapstruct:$mapStructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

    runtimeOnly "com.h2database:h2:$h2Version"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"

    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
}

processResources {
    expand(project.properties)
}

clean {
    delete "out"
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
//        palantirJavaFormat()
        indentWithSpaces(4)
    }
}

jacoco {
    toolVersion = "$jacocoVersion"
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    executionData(fileTree(layout.buildDirectory.get().asFile).include("jacoco/*.exec"))
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ["**/*Application*",
                              "**/config/**/*",
                              "**/exception/**/*",
                              "**/model/**/*",
                              "**/mapper/**/*",
                              "**/repository/**/*"])
        }))
    }
}

dependencyCheck {
    failBuildOnCVSS = 7
    format = "HTML"
}

tasks.testAll {
    finalizedBy tasks.jacocoTestReport
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    finalizedBy tasks.jacocoTestReport

    testLogging {
        events "passed", "skipped", "failed"
    }
}
